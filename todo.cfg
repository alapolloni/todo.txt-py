#
# Optional config file for todo.py
# By default, todo.py will look for this in your home directory.
# If you set the TODOTXT_DIR environment variable, then it will look there.
# Lastly, will look at the TODOTX_CFG_FILE environment variable.
#
[TODO]
# If 1, after you "do" an item, it's moved to done.txt. If 0, it staying in the todo.txt file.
TODOTXT_AUTO_ARCHIVE=0
# If 0, Changes, deletes for example, are done with out giving the user a Y/n prompt
TODOTXT_FORCE=0
# If 1, some extra output.  If 2 full debug outout.  If 0, minimum output.
TODOTXT_VERBOSE=1
# If 1, when deleting or archiving, the a blank line is left where the item was.  If 0, not. 
TODOTXT_PRESERVE_LINE_NUMBERS=1
# If 1, the start date is put at the begining of the item.  If, not
TODOTXT_DATE_ON_ADD=1

# If 1, no color coding is done.
# TODOTXT_PLAIN=1
# If 1, listing is done in Alpabetical order, if 0, listing is done in the same order they were added.
# TODOTXT_SORT_ALPHA=1
# If 1, use the ANSI method to colorize list output.  This is useful in Windows if you are using Terminal program (not cmd.exe) that understands escape sequences. By default, it will use the windows native coloring process.  The windows native colors aren't as nice and the full _due_  item is colored instead of just the due date.
# TODOTXT_ANSI=1
# For ANSI, pick, "light" or "dark"
# TODOTXT_COLOR_THEME=light
